{"ast":null,"code":"var _jsxFileName = \"D:\\\\flipClock\\\\react\\\\src\\\\components\\\\Flipper.js\";\n\n/*\r\n * 翻牌数字\r\n * @author： 兔子先生\r\n * @createDate: 2019-11-24\r\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './flipper.css';\n\nclass Flipper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFlipping: false,\n      flipType: 'down',\n      frontTextFromData: 0,\n      backTextFromData: 1\n    };\n  }\n\n  render() {\n    const {\n      isFlipping,\n      flipType,\n      frontTextFromData,\n      backTextFromData\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: ['M-Flipper', flipType, isFlipping ? 'go' : null].join(' '),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'digital front ' + this._textClass(frontTextFromData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'digital back ' + this._textClass(backTextFromData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }));\n  } // componentDidMount() {\n  //     this.props.onRef(this)\n  // }\n\n\n  test() {\n    console.log('test');\n  }\n\n  _textClass(number) {\n    return 'number' + number;\n  }\n\n  _flip(type, front, back) {\n    // 如果处于翻转中，则不执行\n    if (this.isFlipping) {\n      return false;\n    }\n\n    this.setState({\n      frontTextFromData: front,\n      backTextFromData: back,\n      // 根据传递过来的type设置翻转方向\n      flipType: type,\n      // 设置翻转状态为true\n      isFlipping: true\n    });\n    setTimeout(() => {\n      this.setState({\n        frontTextFromData: back,\n        isFlipping: false\n      });\n    }, this.props.duration);\n  } // 下翻牌\n\n\n  flipDown(front, back) {\n    this._flip('down', front, back);\n  } // 上翻牌\n\n\n  flipUp(front, back) {\n    this._flip('up', front, back);\n  } // 设置前牌文字\n\n\n  setFront(text) {\n    this.setState({\n      frontTextFromData: text\n    });\n  } // 设置后牌文字\n\n\n  setBack(text) {\n    this.setState({\n      backTextFromData: text\n    });\n  }\n\n} // props类型校验\n\n\nFlipper.propTypes = {\n  frontText: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  backText: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  duration: PropTypes.number\n}; // props默认值\n\nFlipper.defaultProps = {\n  // front paper text\n  // 前牌文字\n  frontText: 0,\n  // back paper text\n  // 后牌文字\n  backText: 1,\n  // flipping duration, please be consistent with the CSS animation-duration value.\n  // 翻牌动画时间，与CSS中设置的animation-duration保持一致\n  duration: 600\n};\nexport default Flipper;","map":{"version":3,"sources":["D:/flipClock/react/src/components/Flipper.js"],"names":["React","Component","PropTypes","Flipper","constructor","props","state","isFlipping","flipType","frontTextFromData","backTextFromData","render","join","_textClass","test","console","log","number","_flip","type","front","back","setState","setTimeout","duration","flipDown","flipUp","setFront","text","setBack","propTypes","frontText","oneOfType","string","backText","defaultProps"],"mappings":"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","sourcesContent":["/*\r\n * 翻牌数字\r\n * @author： 兔子先生\r\n * @createDate: 2019-11-24\r\n */\r\nimport React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './flipper.css'\r\n\r\nclass Flipper extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isFlipping: false,\r\n            flipType: 'down',\r\n            frontTextFromData: 0,\r\n            backTextFromData: 1\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { isFlipping, flipType, frontTextFromData, backTextFromData } = this.state\r\n        return (\r\n            <div className={['M-Flipper', flipType, isFlipping?'go':null].join(' ')}>\r\n                <div className={'digital front ' + this._textClass(frontTextFromData)}></div>\r\n                <div className={'digital back ' + this._textClass(backTextFromData)}></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     this.props.onRef(this)\r\n    // }\r\n    test() {\r\n        console.log('test')   \r\n    }\r\n    _textClass(number) {\r\n        return 'number' + number\r\n    }\r\n    _flip(type, front, back) {\r\n        // 如果处于翻转中，则不执行\r\n        if (this.isFlipping) {\r\n            return false\r\n        }\r\n        this.setState({\r\n            frontTextFromData: front,\r\n            backTextFromData: back,\r\n            // 根据传递过来的type设置翻转方向\r\n            flipType: type,\r\n            // 设置翻转状态为true\r\n            isFlipping: true\r\n        })\r\n        setTimeout(() => {\r\n            this.setState({\r\n                frontTextFromData: back,\r\n                isFlipping: false\r\n            })\r\n        }, this.props.duration)\r\n    }\r\n    // 下翻牌\r\n    flipDown(front, back) {\r\n        this._flip('down', front, back)\r\n    }\r\n    // 上翻牌\r\n    flipUp(front, back) {\r\n        this._flip('up', front, back)\r\n    }\r\n    // 设置前牌文字\r\n    setFront(text) {\r\n        this.setState({\r\n            frontTextFromData: text\r\n        })\r\n    }\r\n    // 设置后牌文字\r\n    setBack(text) {\r\n        this.setState({\r\n            backTextFromData: text\r\n        })\r\n    }\r\n}\r\n\r\n// props类型校验\r\nFlipper.propTypes = {\r\n    frontText: PropTypes.oneOfType([\r\n        PropTypes.number,\r\n        PropTypes.string\r\n    ]),\r\n    backText: PropTypes.oneOfType([\r\n        PropTypes.number,\r\n        PropTypes.string\r\n    ]),\r\n    duration: PropTypes.number\r\n}\r\n\r\n// props默认值\r\nFlipper.defaultProps = {\r\n    // front paper text\r\n    // 前牌文字\r\n    frontText: 0,\r\n    // back paper text\r\n    // 后牌文字\r\n    backText: 1,\r\n    // flipping duration, please be consistent with the CSS animation-duration value.\r\n    // 翻牌动画时间，与CSS中设置的animation-duration保持一致\r\n    duration: 600\r\n}\r\n\r\nexport default Flipper"]},"metadata":{},"sourceType":"module"}